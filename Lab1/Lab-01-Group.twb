<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='movies.csv (movies_dataset_group.csv)' inline='true' name='federated.03qdwqo0udcg3e11i6nke08mcisr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='movies_dataset_group.csv' name='excel-direct.1aebuis1pjedec15tpz210cp7w5o'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/user/Downloads/movies_dataset_group.csv.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1aebuis1pjedec15tpz210cp7w5o' name='movies.csv' table='[movies#csv$]' type='table'>
          <columns gridOrigin='A1:P3202:no:A1:P3202:0' header='yes' outcome='2'>
            <column datatype='string' name='Title' ordinal='0' />
            <column datatype='integer' name='US Gross' ordinal='1' />
            <column datatype='integer' name='Worldwide Gross' ordinal='2' />
            <column datatype='integer' name='US DVD Sales' ordinal='3' />
            <column datatype='integer' name='Production Budget' ordinal='4' />
            <column datatype='date' name='Release Date' ordinal='5' />
            <column datatype='string' name='MPAA Rating' ordinal='6' />
            <column datatype='integer' name='Running Time (min)' ordinal='7' />
            <column datatype='string' name='Distributor' ordinal='8' />
            <column datatype='string' name='Source' ordinal='9' />
            <column datatype='string' name='Major Genre' ordinal='10' />
            <column datatype='string' name='Creative Type' ordinal='11' />
            <column datatype='string' name='Director' ordinal='12' />
            <column datatype='integer' name='Rotten Tomatoes Rating' ordinal='13' />
            <column datatype='real' name='IMDB Rating' ordinal='14' />
            <column datatype='integer' name='IMDB Votes' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US Gross</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Worldwide Gross</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Worldwide Gross]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Worldwide Gross</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>US DVD Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[US DVD Sales]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>US DVD Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Production Budget]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Production Budget</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Release Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Release Date]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Release Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MPAA Rating</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MPAA Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>MPAA Rating</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Running Time (min)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Running Time (min)]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Running Time (min)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distributor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Distributor]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Distributor</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Source]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Source</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Major Genre</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Major Genre]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Major Genre</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Creative Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Creative Type]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Creative Type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Director</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Director]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Director</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rotten Tomatoes Rating</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rotten Tomatoes Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>Rotten Tomatoes Rating</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[IMDB Rating]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Rating</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMDB Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[IMDB Votes]</local-name>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias>IMDB Votes</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[movies.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P3202:no:A1:P3202:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
      </column>
      <column datatype='string' name='[Dragon]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Title]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;dragon&quot;'>
            <value>&quot;Crouching Tiger, Hidden Dragon&quot;</value>
            <value>&quot;Dragonfly&quot;</value>
            <value>&quot;Dragonheart&quot;</value>
            <value>&quot;Dragonslayer&quot;</value>
            <value>&quot;Dungeons &amp; Dragons 2: The Elemental Might&quot;</value>
            <value>&quot;Dungeons and Dragons&quot;</value>
            <value>&quot;George and the Dragon&quot;</value>
            <value>&quot;How to Train Your Dragon&quot;</value>
            <value>&quot;Kiss of the Dragon&quot;</value>
            <value>&quot;Pete&apos;s Dragon&quot;</value>
            <value>&quot;Red Dragon&quot;</value>
            <value>&quot;The Mummy: Tomb of the Dragon Emperor&quot;</value>
            <value>&quot;Three Kingdoms: Resurrection of the Dragon&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;star&quot;'>
            <value>&quot;Bright Star&quot;</value>
            <value>&quot;Dickie Roberts: Former Child Star&quot;</value>
            <value>&quot;Lone Star&quot;</value>
            <value>&quot;Rock Star&quot;</value>
            <value>&quot;Star Trek&quot;</value>
            <value>&quot;Star Trek II: The Wrath of Khan&quot;</value>
            <value>&quot;Star Trek III: The Search for Spock&quot;</value>
            <value>&quot;Star Trek IV: The Voyage Home&quot;</value>
            <value>&quot;Star Trek V: The Final Frontier&quot;</value>
            <value>&quot;Star Trek VI: The Undiscovered Country&quot;</value>
            <value>&quot;Star Trek: First Contact&quot;</value>
            <value>&quot;Star Trek: Generations&quot;</value>
            <value>&quot;Star Trek: Insurrection&quot;</value>
            <value>&quot;Star Trek: Nemesis&quot;</value>
            <value>&quot;Star Trek: The Motion Picture&quot;</value>
            <value>&quot;Star Wars Ep. I: The Phantom Menace&quot;</value>
            <value>&quot;Star Wars Ep. II: Attack of the Clones&quot;</value>
            <value>&quot;Star Wars Ep. III: Revenge of the Sith&quot;</value>
            <value>&quot;Star Wars Ep. IV: A New Hope&quot;</value>
            <value>&quot;Star Wars Ep. V: The Empire Strikes Back&quot;</value>
            <value>&quot;Star Wars Ep. VI: Return of the Jedi&quot;</value>
            <value>&quot;Star Wars: The Clone Wars&quot;</value>
            <value>&quot;Stardust&quot;</value>
            <value>&quot;Stargate&quot;</value>
            <value>&quot;Stargate - The Ark of Truth&quot;</value>
            <value>&quot;Starship Troopers&quot;</value>
            <value>&quot;Starsky &amp; Hutch&quot;</value>
            <value>&quot;Superstar&quot;</value>
            <value>&quot;The Men Who Stare at Goats&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.478927' measure-ordering='alphabetic' measure-percentage='0.521073' rowDisplayCount='3201' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Major Genre:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Horror&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Comedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Musical&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Concert/Performance&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Action&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Documentary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romantic Comedy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adventure&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thriller/Suspense&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black Comedy&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Title' />
        <field-sort-custom-order field='US Gross' />
        <field-sort-custom-order field='Worldwide Gross' />
        <field-sort-custom-order field='Calculation_944067080259026944' />
        <field-sort-custom-order field='US DVD Sales' />
        <field-sort-custom-order field='Production Budget' />
        <field-sort-custom-order field='Release Date' />
        <field-sort-custom-order field='MPAA Rating' />
        <field-sort-custom-order field='Running Time (min)' />
        <field-sort-custom-order field='Distributor' />
        <field-sort-custom-order field='Source' />
        <field-sort-custom-order field='Major Genre' />
        <field-sort-custom-order field='Creative Type' />
        <field-sort-custom-order field='Director' />
        <field-sort-custom-order field='Rotten Tomatoes Rating' />
        <field-sort-custom-order field='IMDB Rating' />
        <field-sort-custom-order field='IMDB Votes' />
        <field-sort-custom-order field='Dragon group' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Action VS Comedy'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Sum' name='[sum:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Director:nk]' />
              <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Action&quot;' />
              <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{DAA47713-32AE-422E-A32B-6D8BFD2649AD}' />
    </worksheet>
    <worksheet name='Action VS Comedy and Director'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Sum' name='[sum:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_944067080259026944])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Director:nk]' />
                  <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Major Genre:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Major Genre:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Adventure&quot;' />
                <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Black Comedy&quot;' />
                <groupfilter from='&quot;Concert/Performance&quot;' function='range' level='[none:Major Genre:nk]' to='&quot;Western&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' included-values='in-range'>
            <min>500000</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk] / [federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk])</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{0CDE3609-A81D-473F-A46E-E5E3E2D7E91A}' />
    </worksheet>
    <worksheet name='Average of Revenue Dragon vs Star'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Dragon]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Title]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;dragon&quot;'>
                  <value>&quot;Crouching Tiger, Hidden Dragon&quot;</value>
                  <value>&quot;Dragonfly&quot;</value>
                  <value>&quot;Dragonheart&quot;</value>
                  <value>&quot;Dragonslayer&quot;</value>
                  <value>&quot;Dungeons &amp; Dragons 2: The Elemental Might&quot;</value>
                  <value>&quot;Dungeons and Dragons&quot;</value>
                  <value>&quot;George and the Dragon&quot;</value>
                  <value>&quot;How to Train Your Dragon&quot;</value>
                  <value>&quot;Kiss of the Dragon&quot;</value>
                  <value>&quot;Pete&apos;s Dragon&quot;</value>
                  <value>&quot;Red Dragon&quot;</value>
                  <value>&quot;The Mummy: Tomb of the Dragon Emperor&quot;</value>
                  <value>&quot;Three Kingdoms: Resurrection of the Dragon&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;star&quot;'>
                  <value>&quot;Bright Star&quot;</value>
                  <value>&quot;Dickie Roberts: Former Child Star&quot;</value>
                  <value>&quot;Lone Star&quot;</value>
                  <value>&quot;Rock Star&quot;</value>
                  <value>&quot;Star Trek&quot;</value>
                  <value>&quot;Star Trek II: The Wrath of Khan&quot;</value>
                  <value>&quot;Star Trek III: The Search for Spock&quot;</value>
                  <value>&quot;Star Trek IV: The Voyage Home&quot;</value>
                  <value>&quot;Star Trek V: The Final Frontier&quot;</value>
                  <value>&quot;Star Trek VI: The Undiscovered Country&quot;</value>
                  <value>&quot;Star Trek: First Contact&quot;</value>
                  <value>&quot;Star Trek: Generations&quot;</value>
                  <value>&quot;Star Trek: Insurrection&quot;</value>
                  <value>&quot;Star Trek: Nemesis&quot;</value>
                  <value>&quot;Star Trek: The Motion Picture&quot;</value>
                  <value>&quot;Star Wars Ep. I: The Phantom Menace&quot;</value>
                  <value>&quot;Star Wars Ep. II: Attack of the Clones&quot;</value>
                  <value>&quot;Star Wars Ep. III: Revenge of the Sith&quot;</value>
                  <value>&quot;Star Wars Ep. IV: A New Hope&quot;</value>
                  <value>&quot;Star Wars Ep. V: The Empire Strikes Back&quot;</value>
                  <value>&quot;Star Wars Ep. VI: Return of the Jedi&quot;</value>
                  <value>&quot;Star Wars: The Clone Wars&quot;</value>
                  <value>&quot;Stardust&quot;</value>
                  <value>&quot;Stargate&quot;</value>
                  <value>&quot;Stargate - The Ark of Truth&quot;</value>
                  <value>&quot;Starship Troopers&quot;</value>
                  <value>&quot;Starsky &amp; Hutch&quot;</value>
                  <value>&quot;Superstar&quot;</value>
                  <value>&quot;The Men Who Stare at Goats&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Avg' name='[avg:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Dragon]' />
              <groupfilter function='member' level='[Dragon]' member='&quot;Other&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Calculation_944067080259026944:qk]' field-type='quantitative' max='193163506.67068967' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='background-color' value='#f2f6f7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]' />
              <lod column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Calculation_944067080259026944:qk]</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]</cols>
      </table>
      <simple-id uuid='{ED609718-C16D-4319-92AC-208C93AF5AD5}' />
    </worksheet>
    <worksheet name='Best Comedy'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Max' name='[max:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Director:nk]' />
              <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]'>
            <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='DESC' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[max:Calculation_944067080259026944:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[max:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk] / [federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk])</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[max:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{63738688-36FB-4AC9-BD2D-F267666D53FB}' />
    </worksheet>
    <worksheet name='Comedy Highest Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='date' name='[Release Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Sum' name='[sum:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Release Date]' derivation='Year' name='[yr:Release Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Adam McKay&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Adam Shankman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Akira Kurosawa&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Alan Alda&quot;' />
              <groupfilter from='&quot;Alan Rudolph&quot;' function='range' level='[none:Director:nk]' to='&quot;Albert Hughes&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Alex Proyas&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Amy Heckerling&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Andrei Konchalovsky&quot;' />
              <groupfilter from='&quot;Andrew Bergman&quot;' function='range' level='[none:Director:nk]' to='&quot;Andy Fickman&quot;' />
              <groupfilter from='&quot;Andy Tennant&quot;' function='range' level='[none:Director:nk]' to='&quot;Angela Robinson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Antoine Fuqua&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Arthur Hiller&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Barry Levinson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Barry Sonnenfeld&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ben Stiller&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Betty Thomas&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Bille Woodruff&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Billy Wilder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Bobby Farrelly&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Brad Bird&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Brad Silberling&quot;' />
              <groupfilter from='&quot;Brett Ratner&quot;' function='range' level='[none:Director:nk]' to='&quot;Cameron Crowe&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Catherine Hardwicke&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Charles Martin Smith&quot;' />
              <groupfilter from='&quot;Charles Shyer&quot;' function='range' level='[none:Director:nk]' to='&quot;Chris Nahon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Chris Rock&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Christian Duguay&quot;' />
              <groupfilter from='&quot;Christopher Guest&quot;' function='range' level='[none:Director:nk]' to='&quot;Corey Yuen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Curtis Hanson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Damien Wayans&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Danny De Vito&quot;' />
              <groupfilter from='&quot;David Dobkin&quot;' function='range' level='[none:Director:nk]' to='&quot;David Goyer&quot;' />
              <groupfilter from='&quot;David Lynch&quot;' function='range' level='[none:Director:nk]' to='&quot;David O. Russell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;David Silverman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;David Zucker&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dennie Gordon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dennis Dugan&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Dominic Sena&quot;' />
              <groupfilter from='&quot;Donald Petrie&quot;' function='range' level='[none:Director:nk]' to='&quot;Drew Barrymore&quot;' />
              <groupfilter from='&quot;Edgar Wright&quot;' function='range' level='[none:Director:nk]' to='&quot;Edward Zwick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Eric Darnell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;F. Gary Gray&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Francis Ford Coppola&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Francis Lawrence&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Frank Coraci&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Frank Oz&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Fred Wolf&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gabriele Muccino&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Garry Marshall&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gary Winick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gavin Hood&quot;' />
              <groupfilter from='&quot;George Lucas&quot;' function='range' level='[none:Director:nk]' to='&quot;George P. Cosmatos&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Gore Verbinski&quot;' />
              <groupfilter from='&quot;Greg Mottola&quot;' function='range' level='[none:Director:nk]' to='&quot;Guillermo Del Toro&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Guy Hamilton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Hal Needham&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Harold Ramis&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Howard Deutch&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Hugh Wilson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ivan Reitman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;J.J. Abrams&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Cameron&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Foley&quot;' />
              <groupfilter from='&quot;James L. Brooks&quot;' function='range' level='[none:Director:nk]' to='&quot;James McTeigue&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;James Wong&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jan De Bont&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jared Hess&quot;' />
              <groupfilter from='&quot;Jason Friedberg&quot;' function='range' level='[none:Director:nk]' to='&quot;Jay Russell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jean-Pierre Jeunet&quot;' />
              <groupfilter from='&quot;Jeffrey W. Byrd&quot;' function='range' level='[none:Director:nk]' to='&quot;Jim Abrahams&quot;' />
              <groupfilter from='&quot;Joe Carnahan&quot;' function='range' level='[none:Director:nk]' to='&quot;Joe Pytka&quot;' />
              <groupfilter from='&quot;Joel Coen&quot;' function='range' level='[none:Director:nk]' to='&quot;Joel Zwick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Carpenter&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Dahl&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Frankenheimer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Glen&quot;' />
              <groupfilter from='&quot;John Huston&quot;' function='range' level='[none:Director:nk]' to='&quot;John Lasseter&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John McTiernan&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Milius&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Pasquin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Schultz&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Singleton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Turturro&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Waters&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;John Woo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Amiel&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Favreau&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Jon Turteltaub&quot;' />
              <groupfilter from='&quot;Jonathan Mostow&quot;' function='range' level='[none:Director:nk]' to='&quot;Judd Apatow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Justin Lin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Karey Kirkpatrick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kathryn Bigelow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Keenen Ivory Wayans&quot;' />
              <groupfilter from='&quot;Kenneth Branagh&quot;' function='range' level='[none:Director:nk]' to='&quot;Kevin Costner&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Lima&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Reynolds&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Kevin Smith&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Larry Charles&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Lawrence Kasdan&quot;' />
              <groupfilter from='&quot;Lee Tamahori&quot;' function='range' level='[none:Director:nk]' to='&quot;Luke Wilson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Malcolm D. Lee&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Marc Forster&quot;' />
              <groupfilter from='&quot;Mark DiSalle&quot;' function='range' level='[none:Director:nk]' to='&quot;Mark Waters&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Martin Brest&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Martin Campbell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mathieu Kassovitz&quot;' />
              <groupfilter from='&quot;Matt Reeves&quot;' function='range' level='[none:Director:nk]' to='&quot;Mel Brooks&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Apted&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Bay&quot;' />
              <groupfilter from='&quot;Michael Crichton&quot;' function='range' level='[none:Director:nk]' to='&quot;Michael Mann&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Michael Ritchie&quot;' />
              <groupfilter from='&quot;Michael Winterbottom&quot;' function='range' level='[none:Director:nk]' to='&quot;Mick Jackson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Judge&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Newell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mike Nichols&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mimi Leder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Mira Nair&quot;' />
              <groupfilter from='&quot;Neal Brennan&quot;' function='range' level='[none:Director:nk]' to='&quot;Neil LaBute&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Nora Ephron&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Norman Jewison&quot;' />
              <groupfilter from='&quot;Oxide Pang Chun&quot;' function='range' level='[none:Director:nk]' to='&quot;Paul Greengrass&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Michael Glaser&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Thomas Anderson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Paul Verhoeven&quot;' />
              <groupfilter from='&quot;Paul Weitz&quot;' function='range' level='[none:Director:nk]' to='&quot;Penny Marshall&quot;' />
              <groupfilter from='&quot;Peter Berg&quot;' function='range' level='[none:Director:nk]' to='&quot;Peter Cattaneo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Hewitt&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Hyams&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peter Segal&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Peyton Reed&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Phil Alden Robinson&quot;' />
              <groupfilter from='&quot;Phil Lord&quot;' function='range' level='[none:Director:nk]' to='&quot;Raja Gosnell&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Renny Harlin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Benjamin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Donner&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Fleischer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Richard Linklater&quot;' />
              <groupfilter from='&quot;Ricky Gervais&quot;' function='range' level='[none:Director:nk]' to='&quot;Rob Cohen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Rob Minkoff&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Altman&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Luketic&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Rodriguez&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Robert Zemeckis&quot;' />
              <groupfilter from='&quot;Roger Donaldson&quot;' function='range' level='[none:Director:nk]' to='&quot;Roland Emmerich&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ron Howard&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ron Shelton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ronny Yu&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Ruben Fleischer&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Russell Mulcahy&quot;' />
              <groupfilter from='&quot;Sam Fell&quot;' function='range' level='[none:Director:nk]' to='&quot;Sam Mendes&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sammo Hung Kam-Bo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Seth Gordon&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Shane Meadows&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Shawn Levy&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sheldon Lettich&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Sidney J. Furie&quot;' />
              <groupfilter from='&quot;Simon West&quot;' function='range' level='[none:Director:nk]' to='&quot;Sir Richard Attenborough&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Spike Jonze&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Spike Lee&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stanley Kubrick&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stephen Chow&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Stephen Frears&quot;' />
              <groupfilter from='&quot;Stephen Herek&quot;' function='range' level='[none:Director:nk]' to='&quot;Stephen Sommers&quot;' />
              <groupfilter from='&quot;Steve Buscemi&quot;' function='range' level='[none:Director:nk]' to='&quot;Steve Hickner&quot;' />
              <groupfilter from='&quot;Steve Oedekerk&quot;' function='range' level='[none:Director:nk]' to='&quot;Steven Spielberg&quot;' />
              <groupfilter from='&quot;Sydney Pollack&quot;' function='range' level='[none:Director:nk]' to='&quot;Ted Kotcheff&quot;' />
              <groupfilter from='&quot;Terry Gilliam&quot;' function='range' level='[none:Director:nk]' to='&quot;Thomas Vinterberg&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Burton&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Hill&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tim Story&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Timur Bekmambetov&quot;' />
              <groupfilter from='&quot;Todd Phillips&quot;' function='range' level='[none:Director:nk]' to='&quot;Tom Dey&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Tom Shadyac&quot;' />
              <groupfilter from='&quot;Tony Scott&quot;' function='range' level='[none:Director:nk]' to='&quot;Uwe Boll&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Vincent Gallo&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Walter Hill&quot;' />
              <groupfilter from='&quot;Warren Beatty&quot;' function='range' level='[none:Director:nk]' to='&quot;Wes Anderson&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;William Friedkin&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Wolfgang Petersen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Woody Allen&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Yimou Zhang&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Zack Snyder&quot;' />
              <groupfilter function='member' level='[none:Director:nk]' member='&quot;Zak Penn&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Major Genre:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Major Genre:nk]' member='%null%' />
                <groupfilter from='&quot;Action&quot;' function='range' level='[none:Major Genre:nk]' to='&quot;Black Comedy&quot;' />
                <groupfilter from='&quot;Concert/Performance&quot;' function='range' level='[none:Major Genre:nk]' to='&quot;Western&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1967' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1970' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1971' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1972' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1973' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1974' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1975' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1976' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1977' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1979' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1980' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1981' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1982' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1984' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1986' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1987' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1988' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1989' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1990' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1991' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1992' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1993' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1994' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1995' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1996' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1997' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1998' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='1999' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2000' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2001' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2002' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2003' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2004' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2005' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2006' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2007' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2008' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2009' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='2010' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='DESC' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk] / [federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk])</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{7A03401E-9DD3-41F1-9299-8602DD7746FB}' />
    </worksheet>
    <worksheet name='IMBD Ratings vs Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='real' name='[IMDB Rating]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='date' name='[Release Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Sum' name='[sum:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMDB Rating]' derivation='Sum' name='[sum:IMDB Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Release Date]' derivation='Year' name='[yr:Release Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:IMDB Rating:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Release Date:ok]' />
              <groupfilter function='member' level='[yr:Release Date:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:IMDB Rating:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:IMDB Rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok] / [federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk])</rows>
        <cols>([federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:Calculation_944067080259026944:qk] + [federated.03qdwqo0udcg3e11i6nke08mcisr].[sum:IMDB Rating:qk])</cols>
      </table>
      <simple-id uuid='{CD39CBAF-BDB9-45A0-9E16-C9E2CB1074B5}' />
    </worksheet>
    <worksheet name='Revenue as Dimension'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='string' name='[Major Genre]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='Attribute' name='[attr:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_944067080259026944]' derivation='None' name='[none:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Major Genre]' derivation='None' name='[none:Major Genre:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Title])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Director:nk]' />
                  <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]'>
            <groupfilter function='member' level='[none:Major Genre:nk]' member='&quot;Comedy&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Calculation_944067080259026944:qk]' value='31' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' value='23' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]' />
              <tooltip column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[attr:Title:nk]' />
            </encodings>
            <reference-line axis-column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Calculation_944067080259026944:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='0' value-column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Calculation_944067080259026944:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{7A5FDCE2-AC89-491B-B3E7-B6067A32E901}' />
    </worksheet>
    <worksheet name='Top Directors'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Avg' name='[avg:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Calculation_944067080259026944])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Director:nk]' />
                  <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{63FDF2E3-FFC2-4017-A1A6-E922586A1AC6}' />
    </worksheet>
    <worksheet name='Top Rating  Director'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='real' name='[IMDB Rating]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rotten Tomatoes Rating]' role='measure' type='quantitative' />
            <column datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column-instance column='[IMDB Rating]' derivation='Avg' name='[avg:IMDB Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rotten Tomatoes Rating]' derivation='Avg' name='[avg:Rotten Tomatoes Rating:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Director:nk]' />
              <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([IMDB Rating])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Title:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]' direction='DESC' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:IMDB Rating:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:IMDB Rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Rotten Tomatoes Rating:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk] / [federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk])</rows>
        <cols>([federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:IMDB Rating:qk] + [federated.03qdwqo0udcg3e11i6nke08mcisr].[avg:Rotten Tomatoes Rating:qk])</cols>
      </table>
      <simple-id uuid='{661FEA5C-1974-4564-8F15-284084D2CE32}' />
    </worksheet>
    <worksheet name='Worst Directors'>
      <table>
        <view>
          <datasources>
            <datasource caption='movies.csv (movies_dataset_group.csv)' name='federated.03qdwqo0udcg3e11i6nke08mcisr' />
          </datasources>
          <datasource-dependencies datasource='federated.03qdwqo0udcg3e11i6nke08mcisr'>
            <column caption='Revenue' datatype='integer' name='[Calculation_944067080259026944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Worldwide Gross] - [Production Budget]' />
            </column>
            <column datatype='string' name='[Director]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Production Budget]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Worldwide Gross]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_944067080259026944]' derivation='Max' name='[max:Calculation_944067080259026944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Director]' derivation='None' name='[none:Director:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]'>
            <groupfilter expression='MAX([Calculation_944067080259026944]) &lt;= 0' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Director:nk]' />
                <groupfilter function='member' level='[none:Director:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03qdwqo0udcg3e11i6nke08mcisr].[max:Calculation_944067080259026944:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</rows>
        <cols>[federated.03qdwqo0udcg3e11i6nke08mcisr].[max:Calculation_944067080259026944:qk]</cols>
      </table>
      <simple-id uuid='{51F13963-C4A2-4632-8C35-DCAF54A42A09}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Revenue as Dimension'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19D23930-DD69-4553-8E94-60C12DE080D5}' />
    </window>
    <window class='worksheet' name='Worst Directors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF83C3DD-A812-4855-B110-137CE7A3B990}' />
    </window>
    <window class='worksheet' name='Comedy Highest Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C5E62C2-26AE-4186-8624-BE57CA728CF6}' />
    </window>
    <window class='worksheet' name='Average of Revenue Dragon vs Star'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon and Star]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[Dragon]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[Star]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:MPAA Rating:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{4A3E7D86-26DB-4F56-B8DC-7019896D3407}' />
    </window>
    <window class='worksheet' name='Action VS Comedy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='35'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F6DD3F8-954B-4481-9743-7E35E0F9AADF}' />
    </window>
    <window class='worksheet' name='Action VS Comedy and Director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{244CBBCB-EFAB-44A9-A49C-33B3E135A03E}' />
    </window>
    <window class='worksheet' name='IMBD Ratings vs Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[yr:Release Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57267FAA-3357-4DA6-9067-27EEFD144FF3}' />
    </window>
    <window class='worksheet' maximized='true' name='Top Directors'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B22C1A80-4647-4042-BFE3-63714A075613}' />
    </window>
    <window class='worksheet' name='Top Rating  Director'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C541214-4E49-4584-BE5E-2F80C69BA2D3}' />
    </window>
    <window class='worksheet' name='Best Comedy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Director:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Major Genre:nk]</field>
            <field>[federated.03qdwqo0udcg3e11i6nke08mcisr].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F364D774-F0E3-422E-94AA-25A4A5A5AA87}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='74' name='Action VS Comedy' width='192'>
      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
      5YcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Action VS Comedy and Director' width='192'>
      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
      ACZ5zf8PXTZK6KKk1/cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Average of Revenue Dragon vs Star' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Best Comedy' width='192'>
      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
      /wJ3LGaVOSw47gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Comedy Highest Revenue' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29948dWZbn94kXES+e9za9TyaZTNoiq7une6Znd2d3dmeg2cGuBAESFpB+
      lyAIEgT9IkD/wEIrCBBkIAjQD9pdaZ1mdntMd093l6UnM5PpvX3em/D6gVXVXVNkFV1mkvni
      AxDky4yIeyP4vnHuPeeecwXbtm0cHHoU11l3wMHhLHEE4NDTOAJw6GkcATj0NI4AHHoaRwAO
      PY0jAIeexhGAQ0/jCMChp3EEcM4wDAPDME6lLVVVT6WdF2FZ1htfQ3oL/XB4h9A0Ddu2kaST
      /689LDbQreaJt/MiDMN45fsczUaQJfGrz889u3G4xd3NPWR3mN+6dQUBAJtSrkAkneKr022b
      3bUF9gp1UoOTTA6lXqoTR8sr+AfCHFY9XBiIvNINvC62ZdLpdBBEGY/iRhCEb/xeNy3csoym
      qUiSG5dLeMHVXoxhGIiSxJdn2paFhYCIhWG7kMRXv+a7yr/6eI2/erRz1t14Jf63//oPSUb8
      X31+7hDI0l3M3rxFVLZpNkp8/unHrO8V0Q2DTjXHJ598ws5xBdvUqBlupkb6cMsudlfn+eiT
      zyhUSnz6q1+xvpdnffE+H/3yIw5KFRYf3OHhwhrdbhfTMujqp2OqAdrFPA/mH3P3zgMarQbl
      2tffXK3cIT/97B42Nj/9yb+hUHs98/50YYHfNMxaJcd+pQnVLRYOW29wBw4nwQvsh8qdv/oL
      Iulp0vUKmqayvrHLVF8IU9XRTZ31jS2GkrMYukYw3kd+4xBVt7hxcZTNQhnJJVCv1wmKfm5e
      HmS7uMvKVoFMnwu/Wz7duwTApttuIykR6HYod3Q2Fu5Rb3eY+/7v40UiExTJH+/ijg1jtkv8
      4tEaohIgE5I4rJXpdmQEReFCWmbtoI5lW8hygNnJOL/46B7jV37IyOgY208+ZbVg8MPf+j4y
      JsuP77Fv1vCOBfn0o4d0dYHhoSi+xDiF/W3sxhFHXT83Z1J89PF94sOz/ODGNOfHVry7PFcA
      7kCc3/4bf5vO8RGWLKN4/cSjSbrdBtFICMWj0peII4gyw6kgDx/MkxgYJ2ZVebSyx8zFKTbL
      RXx+PxGvC0nxkkgOMz7UxvKEiIR9KG4/8eBpCkFi6vJV9MND6rqOYXTxhrMkI1XMLxaExzJp
      5ue3GBnPYHTrRAdnUFq7dPHzwQ/G2FvtgFBHcttcvz5JqV7D3WmRKzeYujBBuVQhPJnFygwS
      7+xRb3SICyIXrtxkWMhxP9/CHR2gz65R7WqInRb1RovJgRHaazvsFYokh6ZIJ4Kn+Fx6m+cK
      wBuPAxAcHAYgnerDaFfYq/qJpuJ8mBr86thYdoTvZUe++JTmy39ev/29r10z4YPEB1//mc/z
      5jfwsighH+XFp0jBFEOxOCHd5Mnqn/O0IfJ7E6BEIqREAc+cj2BAwSV5MbeXITnGQMCNGw+Z
      jBsEH7LLRpQ9SLILlxEkhsbaboGZyT4AXIKA7I0Qj/qRDJEEEghpxhQPanGbihFnpi/C8uom
      w2OjuPQanlQ/l6cHWV5cQnQrp/dgehyhVxNibNum1ahhiwoBv/fcDDfa7Ta2beP3+7/74Dfk
      Fw82OK52TrydF2GaFqL4ap78P/j+FH6P+6vPPSuA88ppCqBWqxEOh0+8nReh6zqy/GbDaCcO
      4PDa3FktsrK38q3H/Cd/9xo+z1k4PV6OnhFAs1YCJYzWrBCMxpFfwXRWj3doyTH6Igrzy5vM
      XpjAwoX0iuYXs0u5aREL+6jm91jZOmJy9ioxv/u7z30HWdjKf2cc4D/6vTl8OAI4cxRJYHF9
      DRGY9ntYWNtmaHIGS20ScEPLUtBaFSxRoXCwR3pkmmTYC0C92iZvtgkRYn3nkLF0lLboRa0c
      0rL9TAwlWV1epW/8AhGvzN7WCi07wHg2zObeHp5Qmr6IzNPFJ1ihcWJhN5u7Ra5dm2V+fgXG
      B4mGvdRrBrbZpt610Os55OgAQ5nY2T64c07PrAWS/VE87SLRoTG2VtdIDw2wurLC7s42Wmmb
      /aMyq0dVfGad41oHTde/OldwSfjdcHBcIZWJoTZbNFtNKl0LWa2y9PgB28c5Fp6uYdsWlWKB
      9YV7HB3sowey1MvHrK9tMjoxjkdyASqyO4Rb9uCRYHNnF9tusLOTZ2lxlWhEZme/hKbpL74h
      h7dCzwgABOKxLKGQgt8n83R+AdkboFvLc29hA5dLZHBoEMUfQjYaHOfL5I5yWDYILoF0JECu
      AyG3iCAIuASRSCSC3+clEIngcXtJJePYtkW92SIY8GLZMrFYFK9HQXYZLCysoJoW4EPUc3z0
      8UeY3gheo8lnnz1Gdwkk+wYJKl78HoH9o9xZP7Rzj+MFegGWoXGYL9Pfl3mvXKSn6QX6x//s
      0++cA/yf/+0fEQmcTMDnbXiBviaAbrf7xp1yOFu63S62beP1ek+8rcNcEa8v8K3HhAMKLuFk
      XiGvsxr0r/O1sw3DwDEI7zdf5gLo+snPH9wi+D3itx5zkrkJpmFgveH39blDIKPbxXK7UVst
      AsHgaw0BtG4bl9uH9FKzDJtms0XAr1Aqd4hGvaiqjdf7froHz5J3bQj0rvPcr2crlyNfzbO1
      n8fUVer1BpZt02k1aHVUdF2lXquhGSZat02j1cYydBqNOu2uBkApv0+zo2NaNrquo2tdavUm
      lmWiqV1a7c5XvwPY3t6mW9jj7vIWreIOuYZBvValq+nouo5tWRiGTr1WpaPq6Nqv+9BpNWi2
      v3341qoc8fGvPuL+/CrWS7406vub/PLRU2zL4M/+3Z/S7DznbWZ0yJXrL3dBh3eOFy6Hvv/5
      It/74d/k0Sd/ycJmkds/+pCHv/oEy5vi8kwCDBACGQ4Xf8VxW+K3r15gT3Xhtm0+vDEHQLt6
      SLUeolM5oNNoIIo2SriP4+M9RvrT6HIEvVnl4swUMbfNQl5nOu1m41BlcrLLT/7k3+FOTTKV
      9hOPBejabu7/4meYsRFm0jKaCUIwy/Hy58TGb3Lz4sgLb9SyLGwEsn1Z8jvLbBzVmBgfYWtt
      ndToDHp5i47tIxIJE/aAy5/ENlwoQpd6PY8uhug2ijy5v44v1kfIJzCcDnBY1NFcMp2VeY7q
      OnNzV/Ar3z4scHh3eMEAReGD73/A4cYagifMh9//kFTQTXr0Eh/euITHH+HSpSncgkAoOcD3
      bt8koLiZmLlMLPTrGX8gmqG0/hBfZhgQ8XncmCYMTVxgZHSS1sESSuhZoCecjFDKV4mGghSb
      LbrFEsMXrxKQLPoTQZ6s5Ym4msSmrhPyCLj9EWYvTaGIMpNT01QP99C+5Ua9oQQ3P7jO8fYq
      B+UOt2/dxGiWULU2G9sHGChcnr2A1iizn6vg9z57NyQSUebndxkajlMvHjJ48QNktYpsa9xf
      yhGPiNTrDRZX1tC7XbqO7/694rkWIJDN4pckopN+XIJFqdrEH01yY9aLZiuEg15EWWJ0OMBg
      2k+9YxGOBBBkiA89W0KdyAzjktxMX7mJNxggc/kC5YZGKh7BtMFUG3QsD1PpZ0uvvaEs378V
      I+B1c+tqjKBXQi9U8I6OUDveINM/hD8VZ8oqogSG8LolXLLESL+fTsPFtfTotwbcjW6T+cVV
      AqlBMn6Le/ceMDzUhzfQoi+dJOIVEYF0UGBdSyIJAkooRMrvRm8LJCIevB4PK0sPCaRGyGSD
      tPQcXsVPKqEQdU1yXDdR3D0TXD8XOHGA38Q22d09oH9oEPGEXHcnzWlOgv/1R8vMb+ZPvJ0X
      Ydv2N3K7XxVHAOcMZzn0q+HYa4fXZvWgSmmlcOrtJiN+bkxl38q1ekYAtmWwv7ODFIiTSUR4
      GctpdBpUugLJiJ98PkcskXqpJdC2ZbC3vY0nmiYVPb/5vR8tHJ5JHODmdPatCaBnFsOVjrap
      qgK2oWIYKpVKBU3TqJQraLqJrqk0mi103cA0DUzTopkrML+ximmqfPLJp3S6OvVqhY6qo2ka
      2CZau85+voLWbVGtN7FtaDeqiB4/O1ubZ33bDt9Bz1iASDzD3uE8x0aSan4X2x0kGfHys7/8
      OdnZH+Bt7xPJjqGrXcKKQDA7BriIByUOd7YJZEep5TY5qBhgGvi9Ev0JP3VDotyxWf7sM3ar
      Jr//h3+fbDROpbxGpm/grG/b4TvoGQugaV0CkSSm2sCyXbjdbirlKjNXryKaBpHUAJOjQ0Rl
      k72mScjz7N0QjydY3CkxFHM/Kzkoy7gEGMhGuL9eZiDqAdsmkOjnB9+7TdArUdxZ4aCqY5qn
      V/jL4fXoGQvg8YWIhEwy/QN4JZtSpUG4P0uj0cQXCCGJAoJtUqvXGBy5hiBAsK+PgCQSvR1F
      ll2Iooi/XMYdiOBXRD68FsPlU5gZjWL3R6m3dTyyiDs1wJC7gUt21jK96zhu0HPGabpBn24e
      0VTfvELzqxIJeJgajDtuUIezpT/uO9M4wNvAEYDDa/Ond3a5t3p4qm3+l//+9+hPht7a9XpG
      AJXCIaI/we7qUyYuzVLKHeMSZbLZNLZtUqu1kWXXN4YOlqGy+OQxmhymPxYi0Z9FAqrVCpFI
      FIB28Qg9nCX87lb/OBFylSYbB5VTbVPVzbd6vZ4RgIxNvlzCaJc5KpboqjZqaYPd3V0uXL5I
      tZBjYWmB4QvXibs7HNVM5i5fpFE8JNQ3zUAywNbiY3YOthkcn8No1RGNNoubOYaiHkyXF9Wy
      KR9uYflTzIwPvFe5xL1Kz7hB/dEgleM9QgMXyG9sEAz4kX0RLkwOUa9WqbdtpmYucXkqy/yj
      RZrlYyptE8uykCQZURRxSQqXrt6gUTikWimxtVfgxo0rKC6dz+48IRT00Gp3UTudl066cThb
      esYCCFIQSesSy2ZpHG8SDIextQ5uRcFju/D7LQStyPzqEZm+BG3bi0eEQDLL/XsPODyIkY2E
      UGQZv9+DKIFfNPj8zkMm+mL86IM+9g4KuN0S3VPao8vhzXHcoOeM03SD/s//6i6fPj048XZ+
      k//+P/0xw+lnnqe3XhbF4f3nNAVQr9cJhd6eR+ZVceIADmdKrtyk0Hz54d5QKvy1HRrfBXpG
      ALZlYQvCC4s0WaaJ4BJ/Y5m0ja5/UXjJtjAs3rn/vLPmT+7svNJy6P/1v/pDUtGTt0yvQs94
      gdrFIkfVKgD5fI7DwyMACodHGMDG0jydr7mYTT7+8z+j0NY5Xn3Mzx8snnqfHU6enrEAv0nx
      eJ/9/UOOC8MUdraIjl8iCtSONvjzB/P0jV/m1uww2ZFBCvtHWKqLtF9ka/Euj5Z2+PBHv8XC
      03VsQeRv/PBDxNfYT9jh3aCnBGDbFpZtY9giI8PjDF+4wIEskp4a5XB5nko+R2pkinjIB4Ag
      hxDq+4ixQexOg3rXYDTtJV9uMzx9BVf7+IzvyOFN6RkBKCEv+ScLtNKjDA4O4RVNllc2GcvE
      2VjfYaR/CMXvZfnJPJI7C7jIZBIIyQB4QhhqCL2hUGxGyGSTSG4PQiCN8/J/v3HcoOeM03SD
      fvRkh53cy5eF/KPfmsb/Fuu9vvU4QLFYfONOOZwtmqZh2zaKcvJ7DWuahtt9dkk/pmkiim/m
      mXMswDnjNC3Av/1kiZ1868TbeRGWZeFyvZkj87lzgMbhNnc3d3EJPn74g5u8jMbax9u0oiMk
      n/fiMbrk6hrp2BlGDdt1Hj55gj8xzMz4wFfxAEM3EGXpays387ubiLE+Yl6bxZVDZi+On02n
      33FW9qvvfXn05wrA0g1krw+37UZtlJhfWCY+MAXNA9qCH6/RpiPIhCMpAi4NTyKNrWvoFhha
      h6fzT8CfIuh1MZwOcFTU0ESJpYf3KLVUpqbHWV3eYHByBr24w3Fd58LMOBuLT7GUCB98cPmt
      z861Zpf+6Us093eptyIc72wT7RvFqBYJJ2McHx/gDffRnwzTqZUodmUEpcN2ocpYNcT6XoGJ
      qQkaxWNKTYOpyVEkZwb83vMC+yExNDpGUDAp1Ctomsr6xi5dw8XFqWG6pptLMzN0KwccVhpf
      7Hz4jGZln+2DKq1GDbfZ4cHSMZGQi1qrg+CNMDczga7piIJNo5yjZvu5MhrjsFgjPTxNf8jN
      ydRXNli8/yn7NR3JVMkfH3H/4QLVWp3G4R52OE0592xhl0sJIxp18h2TdEihUSuR21thYX2P
      vVwdWVRptZwq0OeB5wrAHVDYXXpKU1CIeP0oXj9D/SmS6QySSySVSSG6IB2RMeQooiAg+rys
      3v+YsupjIB3CFwiS6BvE61HwKT7ioQDRaAS3x4ffoyBKLnzhBAlFY2GvwVAmQSjoIxiJnIhv
      VhBkLl69zmDUQ6laxhA8eGQRBAFBcBNPxvB+saO5IAhkgwJF1YNbdFGpVAlGwmBahKMxAn4/
      Lpyp03ngDSbBBptrewxPjCI6I4F3BmeLpFfD8QKdM05TALliBVE6eXfri9ANHVlylkM7nBE+
      RSIY9J1Z+04+gMOZ8r//ZJFfvCNDoN+5Nsx//g8+fOXzemY5tKW1uPvZx3zyyefU1W8prVHb
      ZbtiYqgdfvazn2FYNk/v/ZTlvW8P+ZeKecwXZMKrrQrb+wX0RpGN/RyFUvk3f0u5fHbBpDfB
      tm2sd+XPaxao6xkLUCzk6B+7RD23g621uPdoAUuJMJ72s7SxT3poEql1wOH+DvGrfWAL+EWL
      Ur1G1xRRNJUndz+jrsvMTA+yvblNMBikVCnjjw0S9RhgdlhaPcAfz5BUOuwcFciO32A05aNZ
      26FgQDCUodVqYDZX2T6qkEr6efT4gO99b5rVlUOkQIi5kSjzK9sMTlwgv71Ms2uieCQyQzOM
      ZKNn/SjPFT1jAWTRRUfVyQQVdnI5otlJQm6D7Z0CV2/fol7apW36uH115qsocXIwy9biEtFk
      AjpF9OAQM0nYKbTJjE4TkGRmP/gQD12ajTqaaTF1+Ro+0abetbk1N0q9qSOIbmRbpdjQiPgl
      Gs0WTxcX0HQNORRlZuYy6ZBIZvwKiaCbcrmEqTXY2D4ikBxgejDN1OxNzE71jJ/i+aNnBBBJ
      9mNU93h6WGco20e7uIUq+JmaGmDh3j1S/RME3CqPNkuEPQKCKBKOZEklIiTTfcQygwT1YzYa
      HsazESIBL/5wGLdLIBqNEI0n8PtD+BSZaDSMV9D4+M5jBEkEBEb6k8ihBJIoEY9GmLl4EUlW
      8Hsj6M098i0X0aBMNBolGAziCcQYyMSJhoP4wlE8skg4fHZLSc4rjhv0hMjtbXBY0ZidnUE+
      xdfMabpB/+lPn7C8W/7uA08Iy7a/stZz42n+/o9mXvkajgDOGacpgEajQTB4dnugOW5QhzNl
      cbtAUy2QiQeYHU2ddXdei56ZA5hal62NNfLlOo7Nezt8upTjf/wXd/jzuxtn3ZXXpmcsQLda
      o4NAc3MJYWIGTTNIhrx0NQN/IIDWaWKLCm7Jha5pKF6fk+/bA/SMAEAgHIvTF5eYz5exEDje
      WMKWRFLpNB/97BdYvjRz01EsOc6l6UlcTh2sc08PCcAif7hPrtlieGKUvVKXYDxDfzpMtVwg
      PXqJ4f4UBl0mxyZ4if2wHc4BPSMAbyxGxjDwDI4TCbjxBSxc2MiSiNsXwR8soaEQCmZeWD7R
      4fzhuEHPGafpBl3cPKbe1klEfEwOxE+8vb+O4wZ1OFOGkv4zjQO8DZyRrsNr8T/9yzs8WD06
      6268MT1jAdR6mXvz8wjuCB9cv4z8glluJZdDCQexbBcu28bn855yT98PdnI1BqJnlw32tugZ
      ARhdnXj/EFq1TqfTYP7pEpGBSTx6mf2jIuOzN2gerLC4nuP296/Sada4c3eBy9dvoFePEaMD
      TA9nzvo23inOw+Sxh4ZAFtVSEdsS6HSbdFWN1eVVyo0uV6+PUdjYpC4mmZsewVTbdEUfs7Nz
      TPRHaXZUtG6X18y5OLecB19ZzwjAJUuorSbVZhvBtrEQCYcCBMIRZNmDPxyjk1tjbS+PJCl4
      3Ap6I8faXhm3LKJ21bO+hXcO1zkIlvTMEMgbTfLbP/rxV59TyYGv/X5wBAZHfr2gKwYMJL7I
      MR0bPIUevl/4FRn5DQvTvgs4cYBzhrMc+tXoGQvg8PaoNDrUWyqKaPGehwF6Zw5g2xa6rqEb
      hrMc+g35Nx+v8p/9k59wd/l0N8k+CXpGAO3CMR999gmLq1u8oHqJwytime+/X6ynhkCmoWMY
      JruL99mtd4gls8i2QMRtUrMEUsk0pWKV8bHBc+HiO2nOw3ukZywASMxcvcnNuQu4lSA3b9/G
      Kwl47CYHbZjoi7M8/whPKOZ8+XuInrEAvmSSL6tY9k1OAjA+OgrAMNCqHOOL9dMff7d2Mn+3
      ef9tgOMGPWechhu01lJpdlRcpkY2nTixdr4Lxw3qcCaE/Qphv0KtVjvrrrwxjgAcXsj/8v/d
      56f3t174+3/0t2b4uz8In2KP3j49MwkuHu9QaXS58/HHtDSNzc0tdnb2v3Fcs1ZD/w0/aX5n
      h+5zrqd36zQ7z6pMN493KGtQOtyk0DTeSn93d8++7LhuWHQ144V/zNctyfwO0TMWwC/L7JWL
      +Nwmh0cFTMFN62CD/f1dpi/Psre4gCuSonu4jhbOcuvqFRQJdFUlv71NfGSE4vYWZrtGSZPx
      Gjl2Sn5+92/dQu80eLowD40co3MJHny6gBwfICjUOcxVGZyaobK3QV0TuDw7xebSMu54Pz6j
      zHGhQv/UVdq5dTpCgJGUn6dru4jeMENDZ/3Uzj89YwE8kQj1wy0C/bMUd9YIBvz4YxnmLk3S
      LR5S7pqsbmwzODTOlauzuEUb27bpahqdahXVNCiVKwgCdLtt0gMjzF2bwyOA4JLoGxwmm4xh
      tapUuiar6+uolsStW7NUcwXcoTQX+uPsrz9mq9imXqnSQeb2jQtUjo5Y2zqk0aixd1zl5u3b
      RHw98246U3pGAILoI+Tzk0jHiMcjhMOhZ7tWKh78oQh+RWZ4sJ9IzM/Sk0V0y2Z7+Qltd5D+
      /gRLdx/g9oeRZBlZVvD4wuyvLtK1wR2IkoiESKQy+P3+r66lNovcub9MZiBNYW+djUKLkckr
      DERkAsEg0UgMl+Qjlc0w3J/E5wvSnwxx7959RE/grB9ZT+C4QU+Qer1OKBQCy6DeUgkFTz7G
      8DbdoP/yV8vfut7n964N8Ds3p9+4ndflbbhBvyaAYrH4xp1yOFs0TcO2bRTl5PN1u90uHo/n
      xNt5EaZpIr5hToJjAc4Zp5kP8Hj1gFrn7Xi9Xoe3IYDnzrQMtc3hcR4lECUdf76f19A1bEFE
      lmwOdw8wJQ/92fQ3CspaWhdDVHCf8W7apq5ydHSEEoyTiAR5k+JvqtrB5ZIwTAuv5/2vjPC6
      /OzR7nu/UfZzJ8Gt42Pqts326iqqZaFrGrqu0263MS0L09AoHh9SrreBFgeHDdTSNruFGkf5
      KqZpoKoahqFR3d8k1/mWXRlPiW6lQrnTYXttmbam0+m00XWDrdVVGl0VQ9dod7oYhs7qygq6
      YaJ2O6i6gWmY2NiYhsnR0SFHBztUSlW29w8wDY1OV3VyDN5TXuBrMzjaPUKWg9T2N1k9KDOa
      DfPzX37C+JUf4tWKNLsGYxeflcOr5I/ohGQuDarsHascrD7CnxmmUzxGbzXJJqdO8ZZehE29
      UkbAjdmt8Zd/9hOkxBgBvUHD5SHQOeCXD9f54NYP2N3cwOOV2N4pIIkCXreXCzenWVvYAqFL
      KPjrce/Hf/Gv2S6q/PgP/iGD56BOTq/xAjeoRP/wMGHboO2SuTg3R6fV5voHV7FaLSxJIREL
      f7VsOJbuZ7AvTLXSBiCUHGRmPAuih0TsXdnYzUUqncDn8dJqVOgbv4xPFOkfyBCNBKl34cql
      cVzuEOlEFJ8M3mAUn1vAJZgc7u3RUL853pV8EW59eJuw21lE/T7yXAvgz6TxHeaJTk6SCPsQ
      RJnQ+CSHxRoDgzEEvUm1bRIP+wCbbMaHIUYZyiboahYiNggeJicGqLV0kr6zrx7gicYYicUR
      shq6LWDaBfwTMXyyRbGuMTE5Qa1rEY+EafuHcfmjjAgl8PQT9cBBocbsxT5kl40ounC5JIKR
      IMOpCIVqG4/iBK7eRxwv0DnjNL1Aj1b3qbbfby+QEwc4ZzhxgFfDsQDnjNO0AP/PXz3l0frx
      ibfzImzbRnjDzUyeO3Ct7axxZ/cQDDc//vH3kAC1lqPrSRN+wYtlfW2NiS9SDV8GvVGhLvqJ
      +9yv0+9XpniwweOnm/gSfQxnEvRl0984pn68xcP1QwZGJlBsi2g0iMfnR/wiuKF1OoheL1+9
      c4wuHVvBK/fmBHgvX2N+M3/W3XgjXjBzs8EGr99H7XiPla19skEf3uEgi59/huFJMBax2cjV
      iWVGuDw5yJeG5GB9kadb+4yMTCIFo9Cu4BV1Hq/scPHqDfYWHtExZfqTImtl+O3v3SLkfbP1
      HC9Don+c/kKLkauXWH90l8O9HcYuXqF1tE7F9HP5wghGV2VkZo5MUGLl6RaCSydo6+yubiJG
      4xSfPoHBKWbiMlv5NnFXkUcFP797e4qtlWXiQxdwa0V2D8pMzV2hurdKW4zQH3GxtH7E3M0b
      +KTeFMu7ygvcoApXbt0m4TJo6AaTs1cJuW2a9TqCx0eleAyil+sffIAifj0pYnd3l2gijRIM
      0TzaQrdFqtUGYZ/McaFEcmCSueEMkf5BLs7OEfScvvfEJXm4ODtJaXuZB8v7HG1v0wUsU2Nv
      e4tyowNAvVal2awRTo/iUlVGpy5w7co0tVoNyzZIZweZvXaD1t422UvXKe1vkq+2uDqZYmfv
      kKcbuxwf7FAsVrAwUfX3P4HkvPFcAXiifjYe3EcNxEhFEgQ9Mr5kH6l4GJ8kMzU9TTieRJEk
      kvEoAKLZ4uO7j7hweQ6jq+L1BejLJkims6RSceRgkpFskkQySiCZJBJN0jhYp9E9vSix4vHg
      AvzBMIpbwRuKkw4rhCIRXIDsC3Pp8hzZeBCPR8Hj8SC7PQT8Xnw+L5Ks8/jhKrdboBwAABbT
      SURBVIqi0G010eQAOwt3ESNhVu59juUJEw49W2IdDIWJBv0EQhG8Xg9Gt0lXO/uIuMPXcSbB
      54zTnAT/k//3c371ZPfE2zlJHAGcM05TALVajXD47JLinbIoDmdKtdmlbZx8UqHf6ybkO5m4
      hiMAh9fmX3y8eSrLof/4RzP8o79z5USu3TMCqBX2ePx0G38szbXZqW/kLTyP7dXH7B3VwRPi
      B7ev9E4CdQ/RMwKQ3QouwSYai7E5f5ejepfkwBjto02aqs3g2Cg+r5eNzW1Gs1EC6VFwB7n1
      4SzlzQU29nY43t7FF80SExvsHtfIjI9zvDhPdOIyc5PONkrvIz3zUhMVPzdvf0jteBvLHeHW
      7Q+RtTyWN8vV0TBdQWZrdQ2vx89RQ8WvfPFobINcXUVr1pi5cgPUOm1T5vrcNJZukRnoo1Gr
      nO3NObw2PSMAwTJ4+vgh4cwImXQSSRRJpMfoj5is171MD6TJ9meZm+4jFsvgAmIBhQcPHpKa
      mOHC+Dj7q4tkhifw0eLf/vQTXLIHy9BJpr65rMLh/cBxg74yNs1amXrbIJVOIb3MZOIUOU03
      6M8fbLFxePLWb248za2Z/m/8/K2XRXF4/zlNAXxV9+iMcOIADmfKneVjDsqbb/26vzU3zHhf
      9K1f93n0lABMrUnH9OD3iM9dR661qnTFICHPbyZZ2OxtbZMZGUVvlMDrp1M3icd9zypBCBb1
      Wptw+K/tF2qblMoNYkGZvVKXwbibqu4l6j8/j3x+u3QicYDhdMQRwEmgd8qUukEKRxqxiECh
      0mZweJBG8ZCG5iLiqlPxeNEqB2hSkL5kFEutU8jvo3lT+Ft7kBokv98hHDD56KP7TM3NUto7
      wBuNMTLUx/H+F67SkIejo33oBtneL+Jp+7HTg2ytbxFOD+AWTHw+hW7XxndKOREO36SnBPDs
      la1Rr3eplY6IBfzsHB3RrTWx1RruWBgo8LNf3cGlBPiDP/47NAt53OEs5aMt/L8x3HWJMsFQ
      mIBP4Ug38FQrbFhV5h+s448X+L3fvU1AgONWh76Qj+22xSWzxZPVJYz9GhMpDz6PjJga/2rv
      MofTp2fcoNXcLvceb+IPPJs0+cMx0okILlGkUc5TqDafHSjKxBJxxkaHcAH5XAnL0ui2Gqjm
      r/0FLknBZbbIVxqEogmS0TCiohBPphgezCAA/X0+Nvc7ZDJeqqUunWYNJRjHIwpk0jGeHtRJ
      B3rrHfSu0TNeIMsysWwQRRe2BfAsn9TUuzy6fxddCnPj+mVkl4Blmdi2gCiJ2JaF4HI9+xtA
      ELBtcLkELNPERkAQhK9KLZqmiSC4cIkusG0sy8blEr7KXzVNE8Hl4mB9ETs8xHD67a6mPE0v
      0D/+Z5+eyBzgv/iHH/I710a+8zjHDerwDU5TAPvHJSzh7VuweMiL3/vd8yLHDepwpoR88pnG
      Ad4GPTMHcHj7PNwsn3UX3piesQDFgw0+v/+U6OAY2WiQ0ZFv7kBX2V3iwU6ZkdFxrHaHWDxA
      OBJHEp+9J1rVKu5IhK+MrlqjageJeF7+PWIaXap1lXjs12P/emmfjiuBzyhTx41XUohFg889
      /8GnP6dtiIxcvMlA/Gz9R7r5/if594wAEv3jjH9RFmX13id8drjL0PQVWkcbVAyFm1dnMHUD
      fzhK0K9wXCzT9Yu46nnWnm4iRWI0t1YRBqcY8Rkc1kwSUpnHBT8/ujrI2uomkewobjVPrlhn
      bPY6tf1V2kKAbMjF5kGZKzdvolgGXVXn6cPPqDQNZm//Fn5vgP3DPC2zQTQzQLfbZHevQ1DW
      0EWJjbVNBidnGUiGCCb6mRtMsrSVo3NYId+0uPaBU27ldenJIZA7EOP6zTk6Rxs8WT+kXa6g
      AoIokUxnCH6RflevVemoGkMTs4QkkdHJKa5efrYnlqG1iacGuHjlGt1cjrEbt1ArObqCwu3L
      I+TyeVa3D2jUqxiGhWV0aHQsLFOn3mjj8oa5OZWg1ALJG8JoV+maLjxoNFoW7fox++UWeqOM
      oTVZ2z4CoLC/xp/85BOGh8LUrTDXh31sFZ+3k7HDy9AzFgAgHI0gApFIBEl0E0wNMNXt0rZ9
      iIAnECUVjuGVDSLRMJJk4fX6kVwKLjuEZLdYnF9lOCQhSm7kUJLi40ckpwdZfXCHaHaMiFdA
      VNykkjI0EuhyELdbxiW6USRwiW7CIT8u3Eg+CLoAwUUm6qUtJxFlkVBAQvF2qdhxvEIFty9E
      MvFsyDQ2c4ObQQ/HNZWwWOfhrsXlWZ1yw8Jsd/AFnbDaq+C4Qc8Zp+kG/XRhh+/NDp94Oy/C
      2SXS4RucZnXoZrNJIHB2+xk71aEdvsFpWoD7T7dRrbPb/MQwDCTpzUbxzz3b1Doc50sEognC
      /m+v/25qGrYkIQoClWIOU/SRiIUQLIOOZuH1vBsrHdv1CqVaE5fsIRYJ4n1OXXvTUMnnigRj
      SQIvEYl8WRrVMp5gFJel0ejoRELnYxf4Xy4cnc9dIptHh5TUDqtPHtLQLTRVxTAtTNPEtm0s
      q8PxUQXTNCjv7FLWdczmIUvbJRqVCs3KEdVmnZXNHKZlYVsWlmWhaSqmZWGZJrpuYOg6qqaj
      f/FzQ9fQNB3b/mJnSuNt1tK02VpeRbVtdrZ30FQVy7YxDB1Nf7bLyd7KEjVVo1Ktc3R8jGWZ
      aKqKrj87xrJMVFXFtGxMQ3/WV+vZ83n2s2e7Y1q2jaY9e2YAK4v32c/VKByucef+CpZpomoa
      lmVhWTaWZVE5OqZr2+ia9tV5DifPC+yHRGYgQzRosbJfYP3eT3HFJ5hO+0imIjRMk+qRzsHO
      Mq1qm6nBQVy+OB59i0pLJmBW0NJD2LbO0tIqiYBEq93i43uPyYxfImLUCfRNUt1fpNWFaDKA
      HBjByi/yeK/O3/7tKyyslJA8Mj/+/o23cqO+UIxUMklfNsXK3hqPHhUIJwZZffAJxa6X//A/
      /iMSmQSPnm7jHp+hVMih1vPkCzWqKnjcEkNxL3t1A7cngJlfoRMcZTIK+9U2ij+JWdvBtiwS
      wxd4+PkdLt/+IdNDSYLxNJ1GCdXQSYQVFh/epa0ZhNNZLEtBNupoXYO40OHnf/FLggMX+Xu/
      88Eb7WXs8HK8IA5gUi7kWdgqExRaDEzN4nPppGJBnm7kyKZCYOsgB8gmY89WSWoq8aFxZLXG
      l9sCCy6ZsNtmv67hddlMzt1kcihNOD3MxYkBkn2jzIyNcfHGFbymiuYOMz4YR9Ntpi5dpT9x
      MutMvJEU169fQdYa+BLDfP/mLAKgWzLjE2NUCl/seuIOcOXqLCOjk4wOxMElk+7LImExPHkB
      o16mrRmk+7Jg6oRTA1y/Oo1t+7g4PUIhl3v2HEQPklXFFENIgo0pSPSl41iiD1d7D90dQxag
      q3YZm7nGzPg3E8AdTobn7xKZTiEfHJOcuULMJyIIxwwPDRMJeZnxRHG7fIxP+zC7Faoti6hb
      RrBdiEaJ1NgUcZ+IJStEhv34pDj+LkT8MubuLh5/mED8metqYHAQFyDhZnC0n3jNTQeFZCSA
      7XJjhwbe6s0OTYzjBgYHBxAlN32jU0TiBWpdFzLg83moHJeYnp4CU0USJWRZYjDrx0WY8t46
      1bbKzMw0ai3HzGyMvkSAg4NjLlyYwGXpiG4X/TIU7SiZ2LNyKYMDg4i2hiEFsDUVEY2jUpPJ
      gQx6zAPeEIIaxO1TkNhDOoUJrMMzHC/QOeNUd4lcO6RUP7sotLNLpMM3OM04wNsIRL0JThzA
      4RucpgX4p3/5hKW9s1sS/WW23Zvw3DlAp3zE/aUN/LEs12bGgW9G/cxOjTsP51ECSS7PTiG/
      TEc6JfY7CkK7Qf9A9o06/qpojQrLByXmLkywPP+A9Ogs0cBv+vpV8vkuqdTbS1E82Fxi+6hM
      3+gMo32xVz6/VjhgaW2HvvGLDKUj2FqdJ2t55i6Nk99do2wGmBnte2v9fVUOyy0erp3dNqlv
      g+cKQGuoDF2aJeX1USvlyRXquLwyY4rIwpMF4sPTJCWN7MRFokaBzYMyZnkbAmlGEl72jwqE
      4xEOdvZJDk3iMyts5dpcGfZRbNi4KuVTF4De0SkXj+gafewf5gilJzhYeYgcH2IkofBo/jFi
      YIxudY+iKnP5wiiri48xvCnG4hIL64dcmrvM8eYSlj9Df9BicbPAhckMyyu7TF66glE7pGm4
      CfgV0skETV3g2rVrSLLM1vI8TVeIyf4gT+bXGJkcZ2dtncHpyxjVPQ4KbeauzXG0/hTNk2B6
      JIvbH+HatSBr2wVIRygc5bG0OtVWkzt3njB65QOO9zfpuEKM9iVO9XmeF17gBtXZXltlaz/H
      0c4W0cFBmrUqh3tbpMYukY58aV4F/AEf3VabdqfL1uoi+cN97EgWo15kYGKKZq3Cowf3aZYP
      OK6qp3Zjz2OgL8LSwxUSQ0NYZpdmR2Pl6RIrW/tcu3WDoCxQb7Y52t9gd20F3+AsVqdKo1HH
      6hZZXDug2mhjGhrru8fcvD6L1mygqy1WNrbY2T1gYCBLOvnsy2h2G6ysrJAvVSnXGtiGzvLa
      NnM3biDrLVRd4+nKGvWOydVLGRbvPGBx55it7S0sGwSjy8ZegempUbBtdne3adQrHOTaXJq7
      wtRAjO1cjaFs/Eyf6/vMcwXgkiUMtUtX0wjG0kT8CoqiEI1E2Vh8wGGpgSAKbC094pP5I0ay
      ATTDwB8IoPjCZOJh3N4APo+C16OQSqaQfWECXgVFFk9lgvaNe5IkgtEsHa1LJhJAxEDVbIJ+
      P3433L37GM226GoqXn8AbyDI1pO7HJWbqN0uouLD45ZRZBe1ap2gV+TzO49pdrsIkoJXkUn3
      DaCIkCs8cybIoot2u41u2HgViVqtRiLs5+6dO5TqbSxBxu9VaJaPuHN/jf7JMSJeN9FIFEGA
      9dUlSoVjNnaPsS0Db7yPa1evIGhtZLcbQRDp7+9HtDTyxRrFQg7LmdG9Es4k+AUY7Qr3Hi0R
      6RvhwsjJjrNz+Rzpt1Ri/TQnwf/DP/+MXzx+v9cCfU0A9Xr9LPvi8BZQ1WfDzNOwsqqqnok1
      /5K3vhr0LG/G4e1g2/apxQHqbRW1c3abfxumiSS+RTfolw/teGeVneMKcjDO9YsTzz2xXcuz
      sLxFon+M0YEkzrqtd4MvV+yehgD++S/X3/vl0M+1H6nBcQrFJ0xOj7K/vU0slaBULKN4vRiW
      i750nFa7yejUZQ63l2lFfSgeH5rawYVFs9VgfWmNwQuzxD1QbOhk0lEq+QKm7COTjJ66YIx2
      jc8fPEbyx0n43AxNT/K8GGbncIE99wQRs00q/XK++25+jbwySb/SoqLauBtVOrEYad/X83Nt
      S+XB53dRLQ+DozF8/kHi4e+IpFa3eVyPcmXoWXxC73Ro6Dqx97wg1bvCcwXgcomIoogoumhU
      62A0qLtCVFbW8Xu8JNJxLK3DwtI9ApE45YM1vH2zHGxtYrZKJIamkWU3btHi6eoOEZ/Emlam
      mbOQpAKJZPS5X76TpFQpMTFzg3Tcz9L9T/jsoyPSQzPo+WV2KwIfXBllbX2HwbgbO2ZQLjdo
      lrbZOKgxd+s2CbfOx5/dRYkNkXDVOKh2yI5coHO8QrVaZeTWJIW9NT7fKHB5eJCtrXU2fElG
      owILG4dMzt0kK3cIDk5zYyBJcX+JR/c+I5jMkJCaHJQaDAxPkNvbJJAawqruUuvazIxlsG2L
      5YefsV0xmEj4WDrMc2X2EpvLy4T7J7k6M+JY4NfkpcqiiJJCdmCIdCpOLOTHBhAEPF4fqtpG
      EGBl4RGVpkYwnmW4L03AA+V6G8FUKVabSLJMOjtALHQ2Kx19iptyrYaqdlECCW7d/h6ikafR
      EbFKBSqGydjFOeJBBbBQux12do+Ix8LYlk2zWsUdCJE/PkRSwnxw8zouWghKiqszowDE0wPM
      zM4RD/iZvXGLZEhmd2eXcCyKYNvIXg+NahVDVTEkhSs3bxHxuKh1TW5/cI3cxlNCA1NcGE2i
      C0HmLvRRLjTB7FJXwWrW8MT7uDR7GbN2iOUJozj1gN6IF06hp2cv4QKmZi8huAABwuPjCM/+
      SbJ/imBCe1YeRBJIDGhIsoxLeHbE5OUb6BbIgxk0w0ZRZLAFbDtwJsWIAvE+/JUlnm60Gckk
      EUWReLwPu6PhC82QDEdRZAVZypISFYz+DINZL6u7RTyKTMAbQz4scuHCJNGQD1lWiEeSuNVt
      NksmY0mQpBD61jzt1AghWcadSJJNhFhc2cHrUXB5vQxHK9yfX+XC9CBut4iYjJOJeXjwZJXL
      3/8dcpuLrO3q9Ce9rB1qXJkeo6K7aap53IEJYrEQm8uLZEYvEGkv4/Z4Acjn8wTdIk3c+OWe
      LPf0WjhxgHPGacYB/vTjJfaKrRNv50VYloXL9WZidwRwzjhNATQaDYLB59cwPQ2c8ugOZ8rn
      S4cc1958fZcsivwHv3vpLfTo1ekZARjdBo+fzOMO93FpaviLucrzDmxTbrmIhb9eNqXVaqIo
      PiTJGV9/yfx2+a3EAbyK5AjgpFHrHTITF2js79JSszQLx3giKRS7Q76mEXWVeXBg8cFkkN28
      D8msUddE+tNxBEGgXC4SCSeQFQVL1+jUc0jxUdr5HdyhJIJaQ3X5yCQijkvyPaJnBAAGS48f
      oyhRQrkNPvpsEX+iH6VzSLWpMnv9Jj6/99leAEaTX/7VAxqqyO//8R8QUSTAplnP07UiqOU9
      FMXGbq/TEBT6tBof/+wXmJ4gv/f3/oDg2WUJOrwiPWTPBWS3At0uuiiTyvYzNtxPMBJnZGqG
      TDxCq5SjoxkguIjEE0xNj+OWBHJ7G2zu5nArbnY2nrKXrwIgez3UC8fU2zqxZJqJiXHczuv/
      vaJnvEC2ZaHpGoIgIssSuqYhiBIubAzTRHa7MXQdURIBF1gGhmnjdstYpoGFgCSKX5wnIroE
      BMGFoT+7DpaJZQvIsnymBa3ex10ivYrE//3f/YNXPs/ZJdLhG5ymAHaPihj2mxfHdbkERjKR
      Vz7PcYM6nCnRgHKmcYC3Qc8IwDJ0SuUySAqJaASw0XUdt/slqkDbNppu4HbLqO0GtbZOLBZF
      esWSHIahIwjPFhl+S2No2rO23nX+r58u8+ni/nceJ4ou/o//5t87hR69Oj0jAL3TolAu4QtE
      iUcjCLZFtVYjlUx+98m2RaVWJZ2IcXRwiGbayN4AUf8z8eTzOVIvkdLYbjeQpCA+37cJwKRS
      qZNOv16iuyRJnNaodqwvivESScgvjLm8AzhzAIfX5m2kJJ51+z3kBnV427zpQrR3oX3HAjj0
      NI4FcHgl9G6Tg8NjDMumXCph2dBtVml09BNr0zI0SuUaNs/aOsyVsGyLUu6QSrOD0W1SbXYB
      m3KhyKuk6TsCcHh5bIvVpWWalTxbBwXuffYrWqrBxuKnrOzWTqzZciHPzu4ulq3xdGmdysEG
      m3u77B5V2Fh6SjW/yecLO1jdKh/97BNeJUPBEYDDy2NbuHxhpsaHUFWVvmSUo+NjXN4QJ5mZ
      mcgOEPYpoHfwxvq4OJ7huFgnOzRBKuZFsxS8LpPDQpl0OvVK13YE4PDyCC7Mdp21zT0URcET
      zVDdXSIUy5xos81aiVKpRKVj0SkfsbSRI5MIcbS3Qb7SQZEFRvqCLG5UiIW9r3RtZxLs8Ero
      nSa5cpNsNo2uqRiaisfvRdUE/N6TCd5Vi8dUGh184Rgh2aLctsimopTzR0j+OEG3jSkqdJot
      PJKI5Pfxsgs0HAE49DTOEMihp3EE4NDTOAJw6GkcATj0NI4AHHoaRwAOPY0jAIeexhGAQ0/j
      CMChp3EE4NDT/P/9372HzWu9kgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='IMBD Ratings vs Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue as Dimension' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Directors' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Top Rating  Director' width='192'>
      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
      C9vY+VM7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Worst Directors' width='192'>
      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
      EPra/w9PxOiiWyl89QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
